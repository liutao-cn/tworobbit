<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.t18.est.mapper.StoreMapper">

    <resultMap id="BaseResultMap" type="cn.t18.est.pojo.Store">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="storeName" column="storeName" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="adress" column="adress" jdbcType="VARCHAR"/>
            <result property="longitude" column="longitude" jdbcType="DOUBLE"/>
            <result property="latitude" column="latitude" jdbcType="DOUBLE"/>
            <result property="createdUserId" column="createdUserId" jdbcType="BIGINT"/>
            <result property="updatedUserId" column="updatedUserId" jdbcType="BIGINT"/>
            <result property="creatdTime" column="creatdTime" jdbcType="TIMESTAMP"/>
            <result property="updatedTime" column="updatedTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,storeName,phone,
        adress,longitude,latitude,
        createdUserId,updatedUserId,creatdTime,
        updatedTime,isDelete
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from store
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from store
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.t18.est.pojo.Store" useGeneratedKeys="true">
        insert into store
        ( id,storeName,phone
        ,adress,longitude,latitude
        ,createdUserId,updatedUserId,creatdTime
        ,updatedTime,isDelete)
        values (#{id,jdbcType=BIGINT},#{storeName,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR}
        ,#{adress,jdbcType=VARCHAR},#{longitude,jdbcType=DOUBLE},#{latitude,jdbcType=DOUBLE}
        ,#{createdUserId,jdbcType=BIGINT},#{updatedUserId,jdbcType=BIGINT},#{creatdTime,jdbcType=TIMESTAMP}
        ,#{updatedTime,jdbcType=TIMESTAMP},#{isDelete,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.t18.est.pojo.Store" useGeneratedKeys="true">
        insert into store
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="storeName != null">storeName,</if>
                <if test="phone != null">phone,</if>
                <if test="adress != null">adress,</if>
                <if test="longitude != null">longitude,</if>
                <if test="latitude != null">latitude,</if>
                <if test="createdUserId != null">createdUserId,</if>
                <if test="updatedUserId != null">updatedUserId,</if>
                <if test="creatdTime != null">creatdTime,</if>
                <if test="updatedTime != null">updatedTime,</if>
                <if test="isDelete != null">isDelete,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null"> #{id,jdbcType=BIGINT},</if>
                <if test="storeName != null"> #{storeName,jdbcType=VARCHAR},</if>
                <if test="phone != null"> #{phone,jdbcType=VARCHAR},</if>
                <if test="adress != null"> #{adress,jdbcType=VARCHAR},</if>
                <if test="longitude != null"> #{longitude,jdbcType=DOUBLE},</if>
                <if test="latitude != null"> #{latitude,jdbcType=DOUBLE},</if>
                <if test="createdUserId != null"> #{createdUserId,jdbcType=BIGINT},</if>
                <if test="updatedUserId != null"> #{updatedUserId,jdbcType=BIGINT},</if>
                <if test="creatdTime != null"> #{creatdTime,jdbcType=TIMESTAMP},</if>
                <if test="updatedTime != null"> #{updatedTime,jdbcType=TIMESTAMP},</if>
                <if test="isDelete != null"> #{isDelete,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.t18.est.pojo.Store">
        update store
        <set>
                <if test="storeName != null">
                    storeName = #{storeName,jdbcType=VARCHAR},
                </if>
                <if test="phone != null">
                    phone = #{phone,jdbcType=VARCHAR},
                </if>
                <if test="adress != null">
                    adress = #{adress,jdbcType=VARCHAR},
                </if>
                <if test="longitude != null">
                    longitude = #{longitude,jdbcType=DOUBLE},
                </if>
                <if test="latitude != null">
                    latitude = #{latitude,jdbcType=DOUBLE},
                </if>
                <if test="createdUserId != null">
                    createdUserId = #{createdUserId,jdbcType=BIGINT},
                </if>
                <if test="updatedUserId != null">
                    updatedUserId = #{updatedUserId,jdbcType=BIGINT},
                </if>
                <if test="creatdTime != null">
                    creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updatedTime != null">
                    updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
                </if>
                <if test="isDelete != null">
                    isDelete = #{isDelete,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.t18.est.pojo.Store">
        update store
        set 
            storeName =  #{storeName,jdbcType=VARCHAR},
            phone =  #{phone,jdbcType=VARCHAR},
            adress =  #{adress,jdbcType=VARCHAR},
            longitude =  #{longitude,jdbcType=DOUBLE},
            latitude =  #{latitude,jdbcType=DOUBLE},
            createdUserId =  #{createdUserId,jdbcType=BIGINT},
            updatedUserId =  #{updatedUserId,jdbcType=BIGINT},
            creatdTime =  #{creatdTime,jdbcType=TIMESTAMP},
            updatedTime =  #{updatedTime,jdbcType=TIMESTAMP},
            isDelete =  #{isDelete,jdbcType=INTEGER}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>

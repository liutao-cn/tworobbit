<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.t18.est.mapper.SmsLogMapper">

    <resultMap id="BaseResultMap" type="cn.t18.est.pojo.SmsLog">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="codeType" column="codeType" jdbcType="INTEGER"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="message" column="message" jdbcType="VARCHAR"/>
            <result property="failInfo" column="failInfo" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="INTEGER"/>
            <result property="createdUserId" column="createdUserId" jdbcType="BIGINT"/>
            <result property="updatedUserId" column="updatedUserId" jdbcType="BIGINT"/>
            <result property="creatdTime" column="creatdTime" jdbcType="TIMESTAMP"/>
            <result property="updatedTime" column="updatedTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,codeType,phone,
        message,failInfo,status,
        createdUserId,updatedUserId,creatdTime,
        updatedTime,isDelete
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sms_log
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sms_log
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.t18.est.pojo.SmsLog" useGeneratedKeys="true">
        insert into sms_log
        ( id,codeType,phone
        ,message,failInfo,status
        ,createdUserId,updatedUserId,creatdTime
        ,updatedTime,isDelete)
        values (#{id,jdbcType=BIGINT},#{codeType,jdbcType=INTEGER},#{phone,jdbcType=VARCHAR}
        ,#{message,jdbcType=VARCHAR},#{failInfo,jdbcType=VARCHAR},#{status,jdbcType=INTEGER}
        ,#{createdUserId,jdbcType=BIGINT},#{updatedUserId,jdbcType=BIGINT},#{creatdTime,jdbcType=TIMESTAMP}
        ,#{updatedTime,jdbcType=TIMESTAMP},#{isDelete,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.t18.est.pojo.SmsLog" useGeneratedKeys="true">
        insert into sms_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="codeType != null">codeType,</if>
                <if test="phone != null">phone,</if>
                <if test="message != null">message,</if>
                <if test="failInfo != null">failInfo,</if>
                <if test="status != null">status,</if>
                <if test="createdUserId != null">createdUserId,</if>
                <if test="updatedUserId != null">updatedUserId,</if>
                <if test="creatdTime != null">creatdTime,</if>
                <if test="updatedTime != null">updatedTime,</if>
                <if test="isDelete != null">isDelete,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null"> #{id,jdbcType=BIGINT},</if>
                <if test="codeType != null"> #{codeType,jdbcType=INTEGER},</if>
                <if test="phone != null"> #{phone,jdbcType=VARCHAR},</if>
                <if test="message != null"> #{message,jdbcType=VARCHAR},</if>
                <if test="failInfo != null"> #{failInfo,jdbcType=VARCHAR},</if>
                <if test="status != null"> #{status,jdbcType=INTEGER},</if>
                <if test="createdUserId != null"> #{createdUserId,jdbcType=BIGINT},</if>
                <if test="updatedUserId != null"> #{updatedUserId,jdbcType=BIGINT},</if>
                <if test="creatdTime != null"> #{creatdTime,jdbcType=TIMESTAMP},</if>
                <if test="updatedTime != null"> #{updatedTime,jdbcType=TIMESTAMP},</if>
                <if test="isDelete != null"> #{isDelete,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.t18.est.pojo.SmsLog">
        update sms_log
        <set>
                <if test="codeType != null">
                    codeType = #{codeType,jdbcType=INTEGER},
                </if>
                <if test="phone != null">
                    phone = #{phone,jdbcType=VARCHAR},
                </if>
                <if test="message != null">
                    message = #{message,jdbcType=VARCHAR},
                </if>
                <if test="failInfo != null">
                    failInfo = #{failInfo,jdbcType=VARCHAR},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=INTEGER},
                </if>
                <if test="createdUserId != null">
                    createdUserId = #{createdUserId,jdbcType=BIGINT},
                </if>
                <if test="updatedUserId != null">
                    updatedUserId = #{updatedUserId,jdbcType=BIGINT},
                </if>
                <if test="creatdTime != null">
                    creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updatedTime != null">
                    updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
                </if>
                <if test="isDelete != null">
                    isDelete = #{isDelete,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.t18.est.pojo.SmsLog">
        update sms_log
        set 
            codeType =  #{codeType,jdbcType=INTEGER},
            phone =  #{phone,jdbcType=VARCHAR},
            message =  #{message,jdbcType=VARCHAR},
            failInfo =  #{failInfo,jdbcType=VARCHAR},
            status =  #{status,jdbcType=INTEGER},
            createdUserId =  #{createdUserId,jdbcType=BIGINT},
            updatedUserId =  #{updatedUserId,jdbcType=BIGINT},
            creatdTime =  #{creatdTime,jdbcType=TIMESTAMP},
            updatedTime =  #{updatedTime,jdbcType=TIMESTAMP},
            isDelete =  #{isDelete,jdbcType=INTEGER}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>

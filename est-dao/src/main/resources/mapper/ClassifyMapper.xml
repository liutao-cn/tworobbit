<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.t18.est.mapper.ClassifyMapper">

    <resultMap id="BaseResultMap" type="cn.t18.est.pojo.Classify">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="classifyName" column="classifyName" jdbcType="VARCHAR"/>
            <result property="icon" column="icon" jdbcType="VARCHAR"/>
            <result property="bigIcon" column="bigIcon" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="INTEGER"/>
            <result property="createdUserId" column="createdUserId" jdbcType="BIGINT"/>
            <result property="updatedUserId" column="updatedUserId" jdbcType="BIGINT"/>
            <result property="creatdTime" column="creatdTime" jdbcType="TIMESTAMP"/>
            <result property="updatedTime" column="updatedTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,classifyName,icon,
        bigIcon,description,status,
        createdUserId,updatedUserId,creatdTime,
        updatedTime,isDelete
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from classify
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <!-- 获取商品类别 -->
    <select id="getAllClassify" resultType="cn.t18.est.pojo.Classify">
        select
        <include refid="Base_Column_List"></include>
        from classify
        where status=1 and isDelete=0
    </select>


    <!--  &lt;!&ndash; 获取商品列表集合 &ndash;&gt;
      <select id="queryClassifyList" resultMap="brad">
          select c.id cid,c.classifyName,c.icon,c.bigIcon,
          b.id bid,b.brandName,b.logo,
          m.id mid,m.modelName
          from model as m
          inner join brand as b on m.brandId=b.id
          inner join classify as c on m.classifyId=c.id
      </select>
      <resultMap id="brad" type="cn.t18.est.pojo.Classify">
          <result property="id" column="cid" jdbcType="BIGINT"/>
          <result property="classifyName" column="classifyName" jdbcType="VARCHAR"/>
          <result property="icon" column="icon" jdbcType="VARCHAR"/>
          <result property="bigIcon" column="bigIcon" jdbcType="VARCHAR"/>

          <collection property="brandList" ofType="cn.t18.est.pojo.Brand">
              <result property="id" column="bid" jdbcType="BIGINT"/>
              <result property="brandName" column="brandName" jdbcType="VARCHAR"/>
              <result property="logo" column="logo" jdbcType="VARCHAR"/>

              <collection property="modelList" ofType="cn.t18.est.pojo.Model">
                  <result property="id" column="mid" jdbcType="BIGINT"/>
                  <result property="modelName" column="modelName" jdbcType="VARCHAR"/>
              </collection>
          </collection>
      </resultMap>-->

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from classify
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.t18.est.pojo.Classify" useGeneratedKeys="true">
        insert into classify
        ( id,classifyName,icon
        ,bigIcon,description,status
        ,createdUserId,updatedUserId,creatdTime
        ,updatedTime,isDelete)
        values (#{id,jdbcType=BIGINT},#{classifyName,jdbcType=VARCHAR},#{icon,jdbcType=VARCHAR}
        ,#{bigIcon,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR},#{status,jdbcType=INTEGER}
        ,#{createdUserId,jdbcType=BIGINT},#{updatedUserId,jdbcType=BIGINT},#{creatdTime,jdbcType=TIMESTAMP}
        ,#{updatedTime,jdbcType=TIMESTAMP},#{isDelete,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.t18.est.pojo.Classify" useGeneratedKeys="true">
        insert into classify
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="classifyName != null">classifyName,</if>
                <if test="icon != null">icon,</if>
                <if test="bigIcon != null">bigIcon,</if>
                <if test="description != null">description,</if>
                <if test="status != null">status,</if>
                <if test="createdUserId != null">createdUserId,</if>
                <if test="updatedUserId != null">updatedUserId,</if>
                <if test="creatdTime != null">creatdTime,</if>
                <if test="updatedTime != null">updatedTime,</if>
                <if test="isDelete != null">isDelete,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null"> #{id,jdbcType=BIGINT},</if>
                <if test="classifyName != null"> #{classifyName,jdbcType=VARCHAR},</if>
                <if test="icon != null"> #{icon,jdbcType=VARCHAR},</if>
                <if test="bigIcon != null"> #{bigIcon,jdbcType=VARCHAR},</if>
                <if test="description != null"> #{description,jdbcType=VARCHAR},</if>
                <if test="status != null"> #{status,jdbcType=INTEGER},</if>
                <if test="createdUserId != null"> #{createdUserId,jdbcType=BIGINT},</if>
                <if test="updatedUserId != null"> #{updatedUserId,jdbcType=BIGINT},</if>
                <if test="creatdTime != null"> #{creatdTime,jdbcType=TIMESTAMP},</if>
                <if test="updatedTime != null"> #{updatedTime,jdbcType=TIMESTAMP},</if>
                <if test="isDelete != null"> #{isDelete,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.t18.est.pojo.Classify">
        update classify
        <set>
                <if test="classifyName != null">
                    classifyName = #{classifyName,jdbcType=VARCHAR},
                </if>
                <if test="icon != null">
                    icon = #{icon,jdbcType=VARCHAR},
                </if>
                <if test="bigIcon != null">
                    bigIcon = #{bigIcon,jdbcType=VARCHAR},
                </if>
                <if test="description != null">
                    description = #{description,jdbcType=VARCHAR},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=INTEGER},
                </if>
                <if test="createdUserId != null">
                    createdUserId = #{createdUserId,jdbcType=BIGINT},
                </if>
                <if test="updatedUserId != null">
                    updatedUserId = #{updatedUserId,jdbcType=BIGINT},
                </if>
                <if test="creatdTime != null">
                    creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updatedTime != null">
                    updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
                </if>
                <if test="isDelete != null">
                    isDelete = #{isDelete,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.t18.est.pojo.Classify">
        update classify
        set 
            classifyName =  #{classifyName,jdbcType=VARCHAR},
            icon =  #{icon,jdbcType=VARCHAR},
            bigIcon =  #{bigIcon,jdbcType=VARCHAR},
            description =  #{description,jdbcType=VARCHAR},
            status =  #{status,jdbcType=INTEGER},
            createdUserId =  #{createdUserId,jdbcType=BIGINT},
            updatedUserId =  #{updatedUserId,jdbcType=BIGINT},
            creatdTime =  #{creatdTime,jdbcType=TIMESTAMP},
            updatedTime =  #{updatedTime,jdbcType=TIMESTAMP},
            isDelete =  #{isDelete,jdbcType=INTEGER}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>

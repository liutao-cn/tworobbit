<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.t18.est.mapper.BrandMapper">

    <resultMap id="BaseResultMap" type="cn.t18.est.pojo.Brand">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="brandName" column="brandName" jdbcType="VARCHAR"/>
            <result property="logo" column="logo" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="INTEGER"/>
            <result property="createdUserId" column="createdUserId" jdbcType="BIGINT"/>
            <result property="updatedUserId" column="updatedUserId" jdbcType="BIGINT"/>
            <result property="creatdTime" column="creatdTime" jdbcType="TIMESTAMP"/>
            <result property="updatedTime" column="updatedTime" jdbcType="TIMESTAMP"/>
            <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,brandName,logo,
        description,status,createdUserId,
        updatedUserId,creatdTime,updatedTime,
        isDelete
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from brand
        where  id = #{id,jdbcType=BIGINT} 
    </select>

    <!-- 获取每个类型的品牌 -->
    <select id="getBrandList" resultType="cn.t18.est.pojo.Brand">
        select
        <include refid="Base_Column_List" />
        from brand
        where status=1 and isDelete=0 and id in
        <foreach collection="list" item="bid" open="(" separator="," close=")">
            #{bid.brandId}
        </foreach>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from brand
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.t18.est.pojo.Brand" useGeneratedKeys="true">
        insert into brand
        ( id,brandName,logo
        ,description,status,createdUserId
        ,updatedUserId,creatdTime,updatedTime
        ,isDelete)
        values (#{id,jdbcType=BIGINT},#{brandName,jdbcType=VARCHAR},#{logo,jdbcType=VARCHAR}
        ,#{description,jdbcType=VARCHAR},#{status,jdbcType=INTEGER},#{createdUserId,jdbcType=BIGINT}
        ,#{updatedUserId,jdbcType=BIGINT},#{creatdTime,jdbcType=TIMESTAMP},#{updatedTime,jdbcType=TIMESTAMP}
        ,#{isDelete,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.t18.est.pojo.Brand" useGeneratedKeys="true">
        insert into brand
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="brandName != null">brandName,</if>
                <if test="logo != null">logo,</if>
                <if test="description != null">description,</if>
                <if test="status != null">status,</if>
                <if test="createdUserId != null">createdUserId,</if>
                <if test="updatedUserId != null">updatedUserId,</if>
                <if test="creatdTime != null">creatdTime,</if>
                <if test="updatedTime != null">updatedTime,</if>
                <if test="isDelete != null">isDelete,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null"> #{id,jdbcType=BIGINT},</if>
                <if test="brandName != null"> #{brandName,jdbcType=VARCHAR},</if>
                <if test="logo != null"> #{logo,jdbcType=VARCHAR},</if>
                <if test="description != null"> #{description,jdbcType=VARCHAR},</if>
                <if test="status != null"> #{status,jdbcType=INTEGER},</if>
                <if test="createdUserId != null"> #{createdUserId,jdbcType=BIGINT},</if>
                <if test="updatedUserId != null"> #{updatedUserId,jdbcType=BIGINT},</if>
                <if test="creatdTime != null"> #{creatdTime,jdbcType=TIMESTAMP},</if>
                <if test="updatedTime != null"> #{updatedTime,jdbcType=TIMESTAMP},</if>
                <if test="isDelete != null"> #{isDelete,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.t18.est.pojo.Brand">
        update brand
        <set>
                <if test="brandName != null">
                    brandName = #{brandName,jdbcType=VARCHAR},
                </if>
                <if test="logo != null">
                    logo = #{logo,jdbcType=VARCHAR},
                </if>
                <if test="description != null">
                    description = #{description,jdbcType=VARCHAR},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=INTEGER},
                </if>
                <if test="createdUserId != null">
                    createdUserId = #{createdUserId,jdbcType=BIGINT},
                </if>
                <if test="updatedUserId != null">
                    updatedUserId = #{updatedUserId,jdbcType=BIGINT},
                </if>
                <if test="creatdTime != null">
                    creatdTime = #{creatdTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updatedTime != null">
                    updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
                </if>
                <if test="isDelete != null">
                    isDelete = #{isDelete,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.t18.est.pojo.Brand">
        update brand
        set 
            brandName =  #{brandName,jdbcType=VARCHAR},
            logo =  #{logo,jdbcType=VARCHAR},
            description =  #{description,jdbcType=VARCHAR},
            status =  #{status,jdbcType=INTEGER},
            createdUserId =  #{createdUserId,jdbcType=BIGINT},
            updatedUserId =  #{updatedUserId,jdbcType=BIGINT},
            creatdTime =  #{creatdTime,jdbcType=TIMESTAMP},
            updatedTime =  #{updatedTime,jdbcType=TIMESTAMP},
            isDelete =  #{isDelete,jdbcType=INTEGER}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
